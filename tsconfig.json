{
  "compilerOptions": {
    "types": [
      "node",
      "jest",
      "@testing-library/jest-dom"
    ],
    "target": "es5",
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "outDir": "build",
    "rootDir": "src",
    "allowJs": true,
    "allowSyntheticDefaultImports": true,
    "module": "esnext",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react",
    "sourceMap": true,
    "removeComments": true,
    /* Strict Type-Checking Options */
    "strict": true, /* Enable all strict type-checking options. */
    "noImplicitAny": true, /* Raise error on expressions and declarations with an implied 'any' type. */
    "strictNullChecks": true, /* Enable strict null checks. */
    "strictFunctionTypes": true, /* Enable strict checking of function types. */
    "strictBindCallApply": true, /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    "strictPropertyInitialization": true, /* Enable strict checking of property initialization in classes. */
    "noImplicitThis": true, /* Raise error on 'this' expressions with an implied 'any' type. */
    "alwaysStrict": true, /* Parse in strict mode and emit "use strict" for each source file. */
    /* Additional Checks */
    // "noUnusedLocals": true, /* Report errors on unused locals. */
    // "noUnusedParameters": true, /* Report errors on unused parameters. */
    "noImplicitReturns": true, /* Report error when not all code paths in function return a value. */
    "noFallthroughCasesInSwitch": true, /* Report errors for fallthrough cases in switch statement. */
    /* Module Resolution Options */
    "moduleResolution": "node", /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "baseUrl": "./", /* Base directory to resolve non-absolute module names. */
    "paths": {
      "@Components/*": [
        "src/Components/*"
      ],
      "@Configurations/*": [
        "src/Configurations/*"
      ],
      "@Pages/*": [
        "src/Pages/*"
      ],
      "@Container/*": [
        "src/Container/*"
      ],
      "@Styles/*": [
        "src/Styles/base/*"
      ],
      // "GlobalUtils": ["src/utils/global.tsx"],
      "@Utils/*": [
        "src/Utils/*"
      ],
      "@assets": [
        "src/assets/index.tsx"
      ],
      "@types/*": [
        "src/types/*"
      ],
      "@Constants/*": [
        "src/Constants/*"
      ],
      "@Redux/*": [
        "src/Redux/*"
      ],
      "@GlobalComponents/*": [
        "src/GlobalComponents/*"
      ],
      // "store": ["src/store/index.tsx"],
      // "storeFeature/*": ["src/store/features/*"],
      "@hooks/*": [
        "src/hooks/*"
      ],
      "*": [
        "typings/*"
      ]
    }, /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    "typeRoots": [
      "node_modules/@types",
      "Typings/*"
    ], /* List of folders to include type definitions from. */
    "esModuleInterop": true, /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    /* Source Map Options */
    // "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */
    /* Experimental Options */
    "experimentalDecorators": true, /* Enables experimental support for ES7 decorators. */
    // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */
    /* Advanced Options */
    "skipLibCheck": true, /* Skip type checking of declaration files. */
    "forceConsistentCasingInFileNames": true, /* Disallow inconsistently-cased references to the same file. */
    // "include": [
    //   "src",
    //   "**/*.tsx",
    //   "**/*.ts",
    //   "**/*.js",
    //   "Typings"
    // ],
    // "exclude": [
    //   "node_modules",
    //   "build",
    // ]
  },
}
